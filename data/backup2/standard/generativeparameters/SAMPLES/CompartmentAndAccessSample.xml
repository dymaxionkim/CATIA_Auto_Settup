<?xml version="1.0" ?>
<std:node name="ViewSetup" type="Viewsetup" xmlns:std="http://www.dsweb.com/std">
  <!-- ******************************************************************* -->
  <!-- ************ DRAFTING PARAMETERS FOR DRAWING PRODUCTION *********** -->
  <!-- ************ (copied from DefaultGenerativeStyle.xml)   *********** -->
  <!-- ************                                            *********** -->
  <!-- ************ Changes to Drafting Defaults are:          *********** -->
  <!-- ************        AxisLines   set to "No"             *********** -->
  <!-- ************        CenterLines set to "No"             *********** -->
  <!-- ************        3DPoints    set to "Yes"            *********** -->
  <!-- ************        Wireframe   set to "Yes"            *********** -->
  <!-- ************        HiddenLines set to "Yes"            *********** -->
  <!-- ******************************************************************* -->
  <!-- Enums definition...DO NOT TOUCH-->
  <std:enumdef name="FilletRep">
    <std:strval>None</std:strval>
    <std:strval>Boundaries</std:strval>
    <std:strval>Symbolic</std:strval>
    <std:strval>OriginalEdges</std:strval>
    <std:strval>ProjectedOriginalEdges</std:strval>
  </std:enumdef>
  <std:enumdef name="YesNo">
    <std:strval>No</std:strval>
    <std:strval>Yes</std:strval>
  </std:enumdef>
  <std:enumdef name="PatternType">
    <std:strval>Hatching</std:strval>
    <std:strval>Dotting</std:strval>
    <std:strval>Coloring</std:strval>
    <std:strval>Image</std:strval>
  </std:enumdef>
  <!-- End of Enum definition-->
  <std:node name="Drafting">
    <!--   Drafting application parameters-->
    <std:node name="Generate">
      <std:node name="AxisLines">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <std:node name="CenterLines">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <std:node name="Fillets">
        <std:enumval name="FilletRep">Boundaries</std:enumval>
      </std:node>
      <std:node name="HiddenLines">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <std:node name="Threads">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <std:node name="3DPoints">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <std:node name="Wireframe">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <std:node name="Using3DColors">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <std:node name="Using3Dspec">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
    </std:node>
    <!--      End of Drafting parameters-->
  </std:node>
  <!-- ******************************************************************* -->
  <!-- *         START APPLICATION - Compartment and Access              * -->
  <!-- ******************************************************************* -->
  <std:node name="CompartmentAndAccess">
    <!-- ********* OBJECT = Access Part ******************************* -->
    <std:node name="CamAccessPart">
      <!-- ************************************************** -->
      <!-- ********* Graphic Representation Common Attributes -->
      <!-- ************************************************** -->
      <!-- ********* Default=Visible -->
      <std:node name="Visible">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <!-- ********* DefaultColor=Green -->
      <std:node name="Color">
        <std:colorval>0 255 0</std:colorval>
      </std:node>
      <!-- ********* Default LineType=Solid -->
      <std:node name="LineType">
        <std:intval>1</std:intval>
      </std:node>
      <!-- ********* Local dimension of Equipment -->
      <std:node name="FB-Dimension">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <!-- *************************************************** -->
      <!-- ********* Graphic Representation_1 (Default=Layout) -->
      <!-- *************************************************** -->
      <std:node name="GR_1">
        <std:strval>Layout</std:strval>
      </std:node>
      <!-- ********* Display if size is MaxNominalSize or less -->
      <!-- ********* No value (or 0in) means no MaxNominalSize -->
      <std:node name="GR_1_MaxNominalSize">
        <std:strval></std:strval>
      </std:node>
      <!-- ********* Display if size is MinNominalSize or more -->
      <std:node name="GR_1_MinNominalSize">
        <std:strval>0in</std:strval>
      </std:node>
      <!-- ********* LineGapping -->
      <std:node name="GR_1_LineGapping">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* LineGappingValue -->
      <std:node name="GR_1_LineGappingValue">
        <std:floatval>0.0</std:floatval>
      </std:node>
      <!-- ********* CenterLine Definition -->
      <std:node name="GR_1_CenterLines">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* CenterLine ExtensionLength -->
      <std:node name="GR_1_CenterLinesExtensionLength">
        <std:floatval>0.0</std:floatval>
      </std:node>
      <!-- ********* Default LineType=Solid (even when hidden) -->
      <std:node name="GR_1_LineType">
        <std:intval>20</std:intval>
      </std:node>
      <!-- ***************************************************** -->
      <!-- ********* Graphic Representation_2 (Default=Envelope) -->
      <!-- ***************************************************** -->
      <std:node name="GR_2">
        <std:strval>Envelope_NoGeneration</std:strval>
      </std:node>
      <!-- ********* Display if size is MaxNominalSize or less -->
      <!-- ********* No value (or 0in) means no MaxNominalSize -->
      <std:node name="GR_2_MaxNominalSize">
        <std:strval></std:strval>
      </std:node>
      <!-- ********* Display if size is MinNominalSize or more -->
      <std:node name="GR_2_MinNominalSize">
        <std:strval>0in</std:strval>
      </std:node>
      <!-- ********* LineGapping -->
      <std:node name="GR_2_LineGapping">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* LineGappingValue -->
      <std:node name="GR_2_LineGappingValue">
        <std:floatval>0.0</std:floatval>
      </std:node>
      <!-- ********* CenterLine Definition -->
      <std:node name="GR_2_CenterLines">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* CenterLine ExtensionLength -->
      <std:node name="GR_2_CenterLinesExtensionLength">
        <std:floatval>0.0</std:floatval>
      </std:node>
      <!-- ********* Default LineType=Phantom -->
      <std:node name="GR_2_LineType">
        <std:intval>5</std:intval>
      </std:node>
      <!-- *************************************************** -->
      <!-- ******** Graphic Representation_3 (Default=Opening) -->
      <!-- *************************************************** -->
      <std:node name="GR_3">
        <std:strval>Opening_NoGeneration</std:strval>
      </std:node>
      <!-- ********* Display if size is MaxNominalSize or less -->
      <!-- ********* No value (or 0in) means no MaxNominalSize -->
      <std:node name="GR_3_MaxNominalSize">
        <std:strval></std:strval>
      </std:node>
      <!-- ********* Display if size is MinNominalSize or more -->
      <std:node name="GR_3_MinNominalSize">
        <std:strval>0in</std:strval>
      </std:node>
      <!-- ********* LineGapping -->
      <std:node name="GR_3_LineGapping">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* LineGappingValue -->
      <std:node name="GR_3_LineGappingValue">
        <std:floatval>0.0</std:floatval>
      </std:node>
      <!-- ********* CenterLine Definition -->
      <std:node name="GR_3_CenterLines">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* CenterLine ExtensionLength -->
      <std:node name="GR_3_CenterLinesExtensionLength">
        <std:floatval>0.0</std:floatval>
      </std:node>
      <!-- ********* Default LineType=Small-dotted -->
      <std:node name="GR_3_LineType">
        <std:intval>6</std:intval>
      </std:node>
      <!-- ********************************************************* -->
      <!-- ********* ATS Properties                                * -->
      <!-- ********************************************************* -->
      <!-- ********* "Yes" causes inclusion of a leader -->
      <std:node name="ATS_AutoPosition">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* Non zero values causes inclusion of a leader -->
      <std:node name="ATS_CharacterOffset">
        <std:intval>0</std:intval>
      </std:node>
      <!-- ********************************************************* -->
      <!-- ******* ATS Requests (ATS_1 thru ATS_40 available)      * -->
      <!-- ********************************************************* -->
      <std:node name="ATS_1">
        <std:strval>PartNumber</std:strval>
      </std:node>
    </std:node>
    <!-- ********* OBJECT = Compartment Part *************************** -->
    <std:node name="CATCptCompartment">
      <!-- ************************************************** -->
      <!-- ********* Graphic Representation Attributes      * -->
      <!-- ************************************************** -->
      <!-- ********* Default=Visible -->
      <std:node name="Visible">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <!-- ********* Default Color=Blue -->
      <std:node name="Color">
        <std:colorval>0 0 255</std:colorval>
      </std:node>
      <!-- ********* Default LineType=Solid -->
      <std:node name="LineType">
        <std:intval>1</std:intval>
      </std:node>
      <!-- ********* Default Thickness = 1 -->
      <std:node name="Thickness">
        <std:intval>1</std:intval>
      </std:node>
      <!-- ********* Default Enable ATS on Boundary = No -->
      <std:node name="EnableATSOnBoundary">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <!-- ********************************************************* -->
      <!-- ***  Attribute Driven Graphic Replacement of Boundary *** -->
      <!-- ********************************************************* -->
      <std:node name="AttrDrivenBndyReplacement">
        <std:node name="Enable">
          <std:enumval name="YesNo">Yes</std:enumval>
        </std:node>
        <!-- ********* Specifies all the supported boundary types ********-->
        <!-- ********* Wall Boundary data ********-->
        <std:node name="BoundaryType_1">
          <std:node name="Name">
            <std:strval>CATCptWallBoundary</std:strval>
          </std:node>
          <!-- ********* Specifies whether to apply graphic replacement ********-->
          <std:node name="ToProcess">
            <std:enumval name="YesNo">Yes</std:enumval>
          </std:node>
          <std:node name="BoundaryEdgeData">
            <!-- ********* Offset to the center of the compartment ******** -->
            <std:node name="Offset">
              <!-- ********* Unit Symbol (e.g., mm, in, ft), as defined in Units tab in Tools/Options ******** -->
              <std:node name="Unit">
                <std:strval>in</std:strval>
              </std:node>
              <std:node name="Value">
                <std:floatval>0.2</std:floatval>
              </std:node>
            </std:node>
            <!-- ********* Attribute used for setting line graphical properties ******* -->
            <std:node name="Attribute">
              <std:strval>Attr_1</std:strval>
            </std:node>
          </std:node>
          <std:node name="BoundaryPatternData">
            <!-- ********* Attributes used for setting pattern properties ******* -->
            <std:node name="Attribute_1">
              <std:strval>Attr_2</std:strval>
            </std:node>
            <std:node name="Attribute_2">
              <std:strval>Attr_1</std:strval>
            </std:node>
          </std:node>
        </std:node>
        <!-- ********* Deck Boundary data ********-->
        <std:node name="BoundaryType_2">
          <std:node name="Name">
            <std:strval>CATCptDeckBoundary</std:strval>
          </std:node>
          <!-- ********* Specifies whether to apply graphic replacement ********-->
          <std:node name="ToProcess">
            <std:enumval name="YesNo">Yes</std:enumval>
          </std:node>
          <std:node name="BoundaryEdgeData">
            <!-- ********* Offset to the center of the compartment ******** -->
            <std:node name="Offset">
              <!-- ********* Unit Symbol (e.g., mm, in, ft), as defined in Units tab in Tools/Options ******** -->
              <std:node name="Unit">
                <std:strval>in</std:strval>
              </std:node>
              <std:node name="Value">
                <std:floatval>2.0</std:floatval>
              </std:node>
            </std:node>
            <!-- ********* Attribute used for setting line graphical properties ******* -->
            <std:node name="Attribute">
              <std:strval>Attr_1</std:strval>
            </std:node>
          </std:node>
          <std:node name="BoundaryPatternData">
            <!-- ********* Attributes used for setting pattern properties ******* -->
            <std:node name="Attribute_1">
              <std:strval>Attr_2</std:strval>
            </std:node>
            <std:node name="Attribute_2">
              <std:strval>Attr_1</std:strval>
            </std:node>
          </std:node>
        </std:node>
        <!-- ********* Overhead Boundary data ********-->
        <std:node name="BoundaryType_3">
          <std:node name="Name">
            <std:strval>CATCptOverheadBndry</std:strval>
          </std:node>
          <!-- ********* Specifies whether to apply graphic replacement ********-->
          <std:node name="ToProcess">
            <std:enumval name="YesNo">Yes</std:enumval>
          </std:node>
          <std:node name="BoundaryEdgeData">
            <!-- ********* Offset to the center of the compartment ******** -->
            <std:node name="Offset">
              <!-- ********* Unit Symbol (e.g., mm, in, ft), as defined in Units tab in Tools/Options ******** -->
              <std:node name="Unit">
                <std:strval>in</std:strval>
              </std:node>
              <std:node name="Value">
                <std:floatval>2.0</std:floatval>
              </std:node>
            </std:node>
            <!-- ********* Attribute used for setting line graphical properties ******* -->
            <std:node name="Attribute">
              <std:strval>Attr_1</std:strval>
            </std:node>
          </std:node>
          <std:node name="BoundaryPatternData">
            <!-- ********* Attributes used for setting pattern properties ******* -->
            <std:node name="Attribute_1">
              <std:strval>Attr_2</std:strval>
            </std:node>
            <std:node name="Attribute_2">
              <std:strval>Attr_1</std:strval>
            </std:node>
          </std:node>
        </std:node>
        <!-- ********* Attr Mapping used for setting graphical properties ******* -->
        <std:node name="AttrMapping">
          <!-- ********* Attribute #1 with possible values ******* -->
          <std:node name="Attr_1">
            <!-- ********* Attr Name ******* -->
            <std:node name="AttrName">
              <std:strval>Insulated</std:strval>
            </std:node>
            <!-- ********* Possible value #1 with corresponding graphic properties ******* -->
            <std:node name="Value_1">
              <std:node name="AttrValue">
                <std:strval>Yes</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>0 255 0</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>5</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>3</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>dot3</std:strval>
                </std:node>
              </std:node>
            </std:node>
            <!-- ********* Possible value #2 with corresponding graphic properties ******* -->
            <std:node name="Value_2">
              <std:node name="AttrValue">
                <std:strval>No</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>0 255 255</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>2</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>3</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>dot6 green</std:strval>
                </std:node>
              </std:node>
            </std:node>
          </std:node>
          <!-- ********* Attribute #2 with possible values ******* -->
          <std:node name="Attr_2">
            <!-- ********* Attr Name ******* -->
            <std:node name="AttrName">
              <std:strval>DeckCovering</std:strval> -->
            </std:node>
            <!-- ********* Possible value #1 with corresponding graphic properties ******* -->
            <std:node name="Value_1">
              <std:node name="AttrValue">
                <std:strval>Hardwood</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>0 0 255</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>3</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>4</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>blue</std:strval>
                </std:node>
              </std:node>
            </std:node>
            <!-- ********* Possible value #2 with corresponding graphic properties ******* -->
            <std:node name="Value_2">
              <std:node name="AttrValue">
                <std:strval>Carpet</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>0 255 255</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>2</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>3</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>red</std:strval>
                </std:node>
              </std:node>
            </std:node>
            <!-- ********* Possible value #3 with corresponding graphic properties ******* -->
            <std:node name="Value_3">
              <std:node name="AttrValue">
                <std:strval>Vinyl</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>255 255 0</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>4</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>2</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>copper 63</std:strval>
                </std:node>
              </std:node>
            </std:node>
          </std:node>
          <!-- ********* Attribute #3 with possible values ******* -->
          <std:node name="Attr_3">
            <!-- ********* Attr Name ******* -->
            <std:node name="AttrName">
              <std:strval>PaintCode1</std:strval>
            </std:node>
            <!-- ********* Possible value #1 with corresponding graphic properties ******* -->
            <std:node name="Value_1">
              <std:node name="AttrValue">
                <std:strval>10</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>255 0 255</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>6</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>5</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>red</std:strval>
                </std:node>
              </std:node>
            </std:node>
            <!-- ********* Possible value #2 with corresponding graphic properties ******* -->
            <std:node name="Value_2">
              <std:node name="AttrValue">
                <std:strval>20</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>100 100 100</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>3</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>2</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>blue</std:strval>
                </std:node>
              </std:node>
            </std:node>
            <!-- ********* Possible value #3 with corresponding graphic properties ******* -->
            <std:node name="Value_3">
              <std:node name="AttrValue">
                <std:strval>PCode1</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>100 100 255</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>2</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>2</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>dot3</std:strval>
                </std:node>
              </std:node>
            </std:node>
            <!-- ********* Possible value #4 with corresponding graphic properties ******* -->
            <std:node name="Value_4">
              <std:node name="AttrValue">
                <std:strval>PCode2</std:strval>
              </std:node>
              <std:node name="Edge">
                <std:node name="Color">
                  <std:colorval>200 200 100</std:colorval>
                </std:node>
                <std:node name="LineType">
                  <std:intval>3</std:intval>
                </std:node>
                <std:node name="Thickness">
                  <std:intval>2</std:intval>
                </std:node>
              </std:node>
              <std:node name="Pattern">
                <std:node name="Name">
                  <std:strval>green</std:strval>
                </std:node>
              </std:node>
            </std:node>
          </std:node>
        </std:node>
      </std:node>
      <!-- ********************************************************* -->
      <!-- ********* ATS Properties                                * -->
      <!-- ********************************************************* -->
      <!-- ********* "Yes" causes inclusion of a leader -->
      <std:node name="ATS_AutoPosition">
        <std:enumval name="YesNo">No</std:enumval>
      </std:node>
      <!-- ********* Non zero values cause inclusion of a leader -->
      <std:node name="ATS_CharacterOffset">
        <std:intval>0</std:intval>
      </std:node>
      <!-- ********************************************************* -->
      <!-- ******* ATS Requests on Compartment object              * -->
      <!-- *******   (ATS_1 thru ATS_40 available)                 * -->
      <!-- ********************************************************* -->
      <std:node name="ATS_1">
        <std:strval></std:strval>
      </std:node>
      <!-- ********************************************************* -->
      <!-- ******* ATS Requests on Boundary object                 * -->
      <!-- *******   (ATS_Bndy_1 thru ATS_Bndy_40 available)       * -->
      <!-- ********************************************************* -->
      <std:node name="ATS_Bndy_1">
        <std:strval></std:strval>
      </std:node>
    </std:node>
    <!-- ********* OBJECT = Wall System Part *************************** -->
    <std:node name="CATCamWallSystem">
      <!-- ************************************************** -->
      <!-- ********* Graphic Representation Attributes      * -->
      <!-- ************************************************** -->
      <!-- ********* Default=Visible -->
      <std:node name="Visible">
        <std:enumval name="YesNo">Yes</std:enumval>
      </std:node>
      <!-- ********* Default Color = Green -->
      <std:node name="Color">
        <std:colorval>0 255 0</std:colorval>
      </std:node>
      <!-- ********* Default LineType=Solid -->
      <std:node name="LineType">
        <std:intval>1</std:intval>
      </std:node>
      <!-- ********* Default Thickness = 1 -->
      <std:node name="Thickness">
        <std:intval>1</std:intval>
      </std:node>
    </std:node>
  </std:node>
  <!-- ******************************************************************* -->
  <!-- *         END   APPLICATION - Compartment and Access              * -->
  <!-- ******************************************************************* -->
</std:node>
<!-- ********************************************************************* -->
<!-- * END   GVS CUSTOMIZATION                                           * -->
<!-- ********************************************************************* -->
